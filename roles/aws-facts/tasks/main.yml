---
  - name: Collect all instances with tag Apps
    ec2_instance_facts:
      region: "{{ region }}"
      filters:
        "tag:Group": apps
        instance-state-name: running
    register: app_instances
  - name: Show returened values for apps
    debug:
      msg: "Selected app hosts are: {{ app_instances }}"

  - name: Debug
    debug:
      msg: "Value : {{ app_instances.instances.0.private_ip_address }}"

  - name: Add host
    add_host:
      name: "{{ item.private_ip_address }}"
      group: "{{ item.tags.Group }}"
      # ansible_ssh_private_key_file: /root/.ssh/openstack.pem
      # ansible_ssh_user: cloud-user
    with_items: "{{ app_instances.instances }}"

  - name: Collect all instances with tag Frontend
    ec2_instance_facts:
      region: "{{ region }}"
      filters:
        "tag:Group": frontends
        instance-state-name: running
    register: fe_instances
  - name: Show returened values for frontend
    debug:
      msg: "Selected fe hosts are: {{ fe_instances }}"

  - name: Add host
    add_host:
      name: "{{ item.private_ip_address }}"
      group: "{{ item.tags.Group }}"
      # ansible_ssh_private_key_file: /root/.ssh/openstack.pem
      # ansible_ssh_user: cloud-user
    with_items: "{{ fe_instances.instances }}"


  - name: Collect all instances with tag Database
    ec2_instance_facts:
      region: "{{ region }}"
      filters:
        "tag:Group": appdbs
        instance-state-name: running
    register: appdb_instances
  - name: Show returened values for databases
    debug:
      msg: "Selected app hosts are: {{ appdb_instances }}"

  - name: Add host
    add_host:
      name: "{{ item.private_ip_address }}"
      group: "{{ item.tags.Group }}"
      # ansible_ssh_private_key_file: /root/.ssh/openstack.pem
      # ansible_ssh_user: cloud-user
    with_items: "{{ appdb_instances.instances }}"
